class Solution {
    public int findMin(int[] nums) {
        int N = nums.length;
        int start = 0;
        int end = N - 1;

        while(start <= end){
            //when array is already sorted
            if(nums[start] <= nums[end]){
                return nums[start];
            }

            int mid = start + (end - start)/2;
            int next = (mid + 1) % N;   //to handle overflow case
            int prev = (mid + N - 1) % N;   //to handle overflow

            if(nums[mid] <= nums[next] && nums[mid] <= nums[prev]){
                return nums[mid];
            } else if(nums[start] <= nums[mid]){
                start = mid + 1;
            } else if(nums[mid] <= nums[end]){
                end = mid - 1;
            }
        }

        return -1;
    }
}

TC - O(logN)
SC - O(1)
