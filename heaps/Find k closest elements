https://leetcode.com/problems/find-k-closest-elements/
https://www.youtube.com/watch?v=J8yLD-x7fBI&list=PL_z_8CaSLPWdtY9W22VjnPxG30CXNZpI9&index=5
---------------------------------------------------------------

class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        PriorityQueue<int[]> maxheap = new PriorityQueue<>((a,b) -> {
            if(a[0] == b[0]) {
                return b[1] - a[1];
            } else {
                return b[0] - a[0];
            }
        });

        for(int i=0; i<arr.length; i++){
            int key = Math.abs(arr[i] - x);
            int value = arr[i];
            maxheap.add(new int[]{key, value});

            if(maxheap.size() > k){
                maxheap.poll();
            }
        }

        List<Integer> list = new ArrayList<>();

        while(maxheap.size() != 0){
            int[] item = maxheap.poll();
            list.add(item[1]);
        }

        Collections.sort(list);
        return list;
    }
}

Time complexity: O(Nlogk)
space complexity: O(2*k)