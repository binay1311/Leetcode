https://practice.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1#
https://www.youtube.com/watch?v=_k_c9nqzKN0&list=PL_z_8CaSLPWdtY9W22VjnPxG30CXNZpI9&index=9

class Solution
{
    //Function to return the minimum cost of connecting the ropes.
    long minCost(long arr[], int n)
    {
        PriorityQueue<Long> minheap = new PriorityQueue<Long>();

        for(int i=0; i<n; i++){
            minheap.add(arr[i]);
        }

        long cost = 0;
        while(minheap.size() > 1){
            long a = minheap.poll();
            long b = minheap.poll();

            long sum = a + b;
            cost = cost + sum;
            minheap.add(sum);
        }

        return cost;
    }
}

Time complexity: O(NlogN)
space complexity: O(N)
