https://leetcode.com/problems/powx-n/

optimal soln:
------------------------------------------------------------
class Solution {
    public double myPow(double x, int n) {
        double ans = 1.0;
        long m = n;
        if(n < 0){
            m = -1 * m;
        }

        while(m > 0){
            if(m % 2 == 0){
                x = x * x;
                m = m / 2;
            } else {
                ans = ans * x;
                m = m - 1;
            }
        }

        if(n < 0){
            ans =  1 / ans;
        }
        return ans;
    }
}

Time complexity : O(logn)
space complexity: O(1)