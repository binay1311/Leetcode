https://www.youtube.com/watch?v=eQCS_v3bw0Q&list=PLgUwDviBIf0rGlzIn_7rsaR2FQ5e6ZOL9&index=7
-------------------------------------------------------------------------------------------
import java.io.*;
import java.util.*;

class GFG {
    public static int subSequenceSum(int arr[], int k, int curr_sum, int index){

        if(index == arr.length){
            if(curr_sum == k){
                return 1;
            }
            return 0;
        }

        curr_sum = curr_sum + arr[index];
        int left = subSequenceSum(arr, k, curr_sum, index+1);

        curr_sum = curr_sum - arr[index];
        int right = subSequenceSum(arr, k, curr_sum, index+1);

        return left + right;
    }
	public static void main (String[] args) {
		int arr[] = {5, 12, 3, 17, 1, 18, 15, 3, 17};
        int k = 6;
        int curr_sum = 0;

        System.out.println(subSequenceSum(arr, k, curr_sum, 0));
	}
}

Time complexity: O(2^N)
Auxiliary space complexity: O(N)