https://leetcode.com/problems/4sum-ii/

Optimal soln:
--------------------------------------------------------
class Solution {
    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {
        HashMap<Integer, Integer> map = new HashMap<>();

        for(int i : nums1){
            for(int j : nums2){
                map.put(i+j, map.getOrDefault(i+j, 0) + 1);
            }
        }

        int count = 0;

        for(int k : nums3){
            for(int l : nums4){
                int sum = k + l;
                count = count + map.getOrDefault(-sum, 0);
            }
        }

        return count;
    }
}

Time complexity: O(N*N)
space complexity: O(N*N)